# Default values for Logware Security Platform Helm chart
# This is a YAML-formatted file

# Global configuration
global:
  environment: production
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: standard
  domain: logware.example.com

# Frontend configuration
frontend:
  enabled: true
  image:
    repository: logware-frontend
    tag: latest
    pullPolicy: Always
  replicaCount: 3
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: logware.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: logware-tls
        hosts:
          - logware.example.com
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  config:
    apiUrl: https://api.logware.example.com

# Backend configuration
backend:
  enabled: true
  image:
    repository: logware-backend
    tag: latest
    pullPolicy: Always
  replicaCount: 3
  service:
    type: ClusterIP
    port: 8080
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: api.logware.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: logware-api-tls
        hosts:
          - api.logware.example.com
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  config:
    logLevel: info
    jwtExpiration: 1h
    refreshTokenExpiration: 7d
    corsOrigin: https://logware.example.com
  secrets:
    jwtSecret: ""
    refreshTokenSecret: ""
    encryptionKey: ""

# Database configurations
mongodb:
  enabled: true
  auth:
    rootPassword: ""
    rootUser: root
    database: logware
  persistence:
    enabled: true
    size: 50Gi
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 4Gi

elasticsearch:
  enabled: true
  replicas: 1
  minimumMasterNodes: 1
  persistence:
    enabled: true
    size: 100Gi
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi

redis:
  enabled: true
  auth:
    password: ""
  architecture: standalone
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 1Gi

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    persistence:
      enabled: true
      size: 20Gi
  
  grafana:
    enabled: true
    adminUser: admin
    adminPassword: ""
    service:
      type: ClusterIP
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - grafana.logware.example.com
      tls:
        - secretName: grafana-tls
          hosts:
            - grafana.logware.example.com
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 300m
        memory: 512Mi
    persistence:
      enabled: true
      size: 8Gi
    dashboards:
      default: true
