{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logware.backend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "logware.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        {{- include "logware.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- include "logware.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          image: "{{ .Values.global.imageRegistry }}{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          env:
            - name: NODE_ENV
              value: {{ .Values.global.environment | quote }}
            - name: PORT
              value: "8080"
            - name: LOG_LEVEL
              value: {{ .Values.backend.config.logLevel | quote }}
            - name: MONGODB_URI
              value: "mongodb://{{ .Values.mongodb.auth.rootUser }}:$(MONGODB_PASSWORD)@{{ include "logware.mongodb.fullname" . }}:27017/{{ .Values.mongodb.auth.database }}?authSource=admin"
            - name: ELASTICSEARCH_HOSTS
              value: "http://{{ include "logware.elasticsearch.fullname" . }}:9200"
            - name: REDIS_HOST
              value: {{ include "logware.redis.fullname" . | quote }}
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis-credentials
                  key: redis-password
            - name: CORS_ORIGIN
              value: {{ .Values.backend.config.corsOrigin | quote }}
            - name: JWT_EXPIRATION
              value: {{ .Values.backend.config.jwtExpiration | quote }}
            - name: REFRESH_TOKEN_EXPIRATION
              value: {{ .Values.backend.config.refreshTokenExpiration | quote }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mongodb-credentials
                  key: mongodb-root-password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-backend-secrets
                  key: jwt-secret
            - name: REFRESH_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-backend-secrets
                  key: refresh-token-secret
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-backend-secrets
                  key: encryption-key
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "logware.backend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.backend.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "logware.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend
{{- if .Values.backend.ingress.enabled }}
---
apiVersion: {{ include "logware.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "logware.backend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
  {{- with .Values.backend.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.backend.ingress.tls }}
  tls:
    {{- range .Values.backend.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.backend.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if eq (include "logware.ingress.apiVersion" $) "networking.k8s.io/v1" }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "logware.backend.fullname" $ }}
                port:
                  number: {{ $.Values.backend.service.port }}
            {{- else }}
            backend:
              serviceName: {{ include "logware.backend.fullname" $ }}
              servicePort: {{ $.Values.backend.service.port }}
            {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
{{- if .Values.backend.autoscaling.enabled }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "logware.backend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "logware.backend.fullname" . }}
  minReplicas: {{ .Values.backend.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.backend.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ .Values.backend.autoscaling.targetCPUUtilizationPercentage }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-backend-secrets
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
type: Opaque
data:
  jwt-secret: {{ .Values.backend.secrets.jwtSecret | default (randAlphaNum 32) | b64enc }}
  refresh-token-secret: {{ .Values.backend.secrets.refreshTokenSecret | default (randAlphaNum 32) | b64enc }}
  encryption-key: {{ .Values.backend.secrets.encryptionKey | default (randAlphaNum 32) | b64enc }}
{{- end }}
