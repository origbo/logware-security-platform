{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "logware.frontend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  {{- if not .Values.frontend.autoscaling.enabled }}
  replicas: {{ .Values.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "logware.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        {{- include "logware.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      {{- include "logware.imagePullSecrets" . | nindent 6 }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          image: "{{ .Values.global.imageRegistry }}{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          env:
            - name: API_URL
              value: {{ .Values.frontend.config.apiUrl | quote }}
            - name: NODE_ENV
              value: {{ .Values.global.environment | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "logware.frontend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
    - port: {{ .Values.frontend.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "logware.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
{{- if .Values.frontend.ingress.enabled }}
---
apiVersion: {{ include "logware.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "logware.frontend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
  {{- with .Values.frontend.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.frontend.ingress.tls }}
  tls:
    {{- range .Values.frontend.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.frontend.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if eq (include "logware.ingress.apiVersion" $) "networking.k8s.io/v1" }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "logware.frontend.fullname" $ }}
                port:
                  number: {{ $.Values.frontend.service.port }}
            {{- else }}
            backend:
              serviceName: {{ include "logware.frontend.fullname" $ }}
              servicePort: {{ $.Values.frontend.service.port }}
            {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
{{- if .Values.frontend.autoscaling.enabled }}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "logware.frontend.fullname" . }}
  labels:
    {{- include "logware.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "logware.frontend.fullname" . }}
  minReplicas: {{ .Values.frontend.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.frontend.autoscaling.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: {{ .Values.frontend.autoscaling.targetCPUUtilizationPercentage }}
{{- end }}
{{- end }}
