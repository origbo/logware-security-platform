apiVersion: apps/v1
kind: Deployment
metadata:
  name: logware-frontend
  labels:
    app: logware
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: logware
      tier: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: logware
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: ${DOCKER_REGISTRY}/logware-frontend:${VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
        envFrom:
        - configMapRef:
            name: frontend-config
      imagePullSecrets:
      - name: registry-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: logware-frontend
  labels:
    app: logware
    tier: frontend
spec:
  selector:
    app: logware
    tier: frontend
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: logware-frontend-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - logware.example.com
    secretName: logware-tls
  rules:
  - host: logware.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: logware-frontend
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  API_URL: "https://api.logware.example.com"
  NODE_ENV: "production"
