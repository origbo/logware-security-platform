/**
 * Vulnerability Management Component
 *
 * Main component for managing vulnerabilities with lists, filtering, and details views
 */
import React, { useState } from "react";
import {
  Box,
  Typography,
  Paper,
  Button,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Grid,
  IconButton,
  Tooltip,
  useTheme,
} from "@mui/material";
import {
  Add as AddIcon,
  CloudUpload as CloudUploadIcon,
  GetApp as DownloadIcon,
  BarChart as BarChartIcon,
} from "@mui/icons-material";

import { VulnerabilityFilters } from "./vulnerability/VulnerabilityFilters";
import { VulnerabilityList } from "./vulnerability/VulnerabilityList";
import { VulnerabilityDetails } from "./vulnerability/VulnerabilityDetails";
import {
  VulnerabilitySeverity,
  VulnerabilityStatus,
  Vulnerability,
} from "../../types/attackPathTypes";

export const VulnerabilityManagement: React.FC = () => {
  const theme = useTheme();

  // State for vulnerability filters
  const [filters, setFilters] = useState({
    search: "",
    severity: [] as VulnerabilitySeverity[],
    status: [] as VulnerabilityStatus[],
    cvssMin: 0,
    cvssMax: 10,
    assetIds: [] as string[],
  });

  // State for vulnerability details view
  const [selectedVulnerabilityId, setSelectedVulnerabilityId] = useState<
    string | null
  >(null);

  // State for add vulnerability dialog
  const [addDialogOpen, setAddDialogOpen] = useState(false);
  const [newVulnerability, setNewVulnerability] = useState({
    name: "",
    description: "",
    cveId: "",
    severity: "MEDIUM" as VulnerabilitySeverity,
    assetId: "",
  });

  // State for import dialog
  const [importDialogOpen, setImportDialogOpen] = useState(false);
  const [importSource, setImportSource] = useState("");
  const [importFile, setImportFile] = useState<File | null>(null);

  // Handle filter changes
  const handleFiltersChange = (newFilters: any) => {
    setFilters(newFilters);
  };

  // Handle view vulnerability details
  const handleViewDetails = (vulnerability: Vulnerability) => {
    setSelectedVulnerabilityId(vulnerability.id);
  };

  // Handle back from vulnerability details
  const handleBackFromDetails = () => {
    setSelectedVulnerabilityId(null);
  };

  // Handle add vulnerability dialog
  const handleAddDialogOpen = () => {
    setAddDialogOpen(true);
  };

  const handleAddDialogClose = () => {
    setAddDialogOpen(false);
  };

  // Handle add vulnerability form change
  const handleAddVulnerabilityChange = (name: string, value: any) => {
    setNewVulnerability((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  // Handle add vulnerability submit
  const handleAddVulnerability = () => {
    // Add vulnerability logic would go here
    console.log("Adding new vulnerability:", newVulnerability);

    // Reset form and close dialog
    setNewVulnerability({
      name: "",
      description: "",
      cveId: "",
      severity: "MEDIUM",
      assetId: "",
    });
    setAddDialogOpen(false);
  };

  // Handle import dialog
  const handleImportDialogOpen = () => {
    setImportDialogOpen(true);
  };

  const handleImportDialogClose = () => {
    setImportDialogOpen(false);
    setImportSource("");
    setImportFile(null);
  };

  // Handle import file change
  const handleImportFileChange = (
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    if (event.target.files && event.target.files.length > 0) {
      setImportFile(event.target.files[0]);
    }
  };

  // Handle import vulnerabilities
  const handleImportVulnerabilities = () => {
    // Import vulnerabilities logic would go here
    console.log("Importing vulnerabilities from:", importSource, importFile);

    // Close dialog
    handleImportDialogClose();
  };

  return (
    <Box>
      <Box
        sx={{
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          mb: 3,
        }}
      >
        <Typography variant="h5">Vulnerability Management</Typography>

        {!selectedVulnerabilityId && (
          <Box>
            <Button
              variant="outlined"
              startIcon={<DownloadIcon />}
              sx={{ mr: 1 }}
              onClick={() => {
                // Export vulnerabilities logic would go here
                console.log("Exporting vulnerabilities");
              }}
            >
              Export
            </Button>
            <Button
              variant="outlined"
              startIcon={<CloudUploadIcon />}
              sx={{ mr: 1 }}
              onClick={handleImportDialogOpen}
            >
              Import
            </Button>
            <Button
              variant="contained"
              startIcon={<AddIcon />}
              onClick={handleAddDialogOpen}
            >
              Add Vulnerability
            </Button>
          </Box>
        )}
      </Box>

      {selectedVulnerabilityId ? (
        // Vulnerability Details View
        <VulnerabilityDetails
          vulnerabilityId={selectedVulnerabilityId}
          onBack={handleBackFromDetails}
        />
      ) : (
        // Vulnerability List View
        <>
          <Box sx={{ mb: 3 }}>
            <Grid container spacing={2}>
              <Grid item xs={12} md={3}>
                <Paper sx={{ p: 2, height: "100%" }}>
                  <Box sx={{ display: "flex", alignItems: "center", mb: 2 }}>
                    <BarChartIcon
                      sx={{ mr: 1, color: theme.palette.primary.main }}
                    />
                    <Typography variant="h6">Summary</Typography>
                  </Box>
                  <Grid container spacing={2}>
                    <Grid item xs={6}>
                      <Typography variant="body2" color="textSecondary">
                        Critical:
                      </Typography>
                      <Typography variant="h6" color="error.dark">
                        12
                      </Typography>
                    </Grid>
                    <Grid item xs={6}>
                      <Typography variant="body2" color="textSecondary">
                        High:
                      </Typography>
                      <Typography variant="h6" color="error.main">
                        24
                      </Typography>
                    </Grid>
                    <Grid item xs={6}>
                      <Typography variant="body2" color="textSecondary">
                        Medium:
                      </Typography>
                      <Typography variant="h6" color="warning.main">
                        45
                      </Typography>
                    </Grid>
                    <Grid item xs={6}>
                      <Typography variant="body2" color="textSecondary">
                        Low:
                      </Typography>
                      <Typography variant="h6" color="success.main">
                        37
                      </Typography>
                    </Grid>
                    <Grid item xs={12}>
                      <Box
                        sx={{
                          mt: 1,
                          pt: 1,
                          borderTop: `1px solid ${theme.palette.divider}`,
                        }}
                      >
                        <Typography variant="body2" color="textSecondary">
                          Total Vulnerabilities:
                        </Typography>
                        <Typography variant="h6">118</Typography>
                      </Box>
                    </Grid>
                  </Grid>
                </Paper>
              </Grid>
              <Grid item xs={12} md={9}>
                <Paper sx={{ p: 2, height: "100%" }}>
                  <Box sx={{ display: "flex", alignItems: "center", mb: 2 }}>
                    <BarChartIcon
                      sx={{ mr: 1, color: theme.palette.primary.main }}
                    />
                    <Typography variant="h6">Remediation Status</Typography>
                  </Box>
                  <Grid container spacing={2}>
                    <Grid item xs={4}>
                      <Typography variant="body2" color="textSecondary">
                        Open:
                      </Typography>
                      <Typography variant="h6" color="error.main">
                        65
                      </Typography>
                    </Grid>
                    <Grid item xs={4}>
                      <Typography variant="body2" color="textSecondary">
                        In Progress:
                      </Typography>
                      <Typography variant="h6" color="warning.main">
                        32
                      </Typography>
                    </Grid>
                    <Grid item xs={4}>
                      <Typography variant="body2" color="textSecondary">
                        Fixed:
                      </Typography>
                      <Typography variant="h6" color="success.main">
                        21
                      </Typography>
                    </Grid>
                    <Grid item xs={12}>
                      <Box
                        sx={{
                          mt: 1,
                          pt: 1,
                          borderTop: `1px solid ${theme.palette.divider}`,
                        }}
                      >
                        <Typography variant="body2" color="textSecondary">
                          Average Remediation Time:
                        </Typography>
                        <Typography variant="h6">15 days</Typography>
                      </Box>
                    </Grid>
                  </Grid>
                </Paper>
              </Grid>
            </Grid>
          </Box>

          {/* Filters */}
          <VulnerabilityFilters
            filters={filters}
            onFiltersChange={handleFiltersChange}
          />

          {/* Vulnerability List */}
          <VulnerabilityList
            filters={filters}
            onViewDetails={handleViewDetails}
          />
        </>
      )}

      {/* Add Vulnerability Dialog */}
      <Dialog
        open={addDialogOpen}
        onClose={handleAddDialogClose}
        maxWidth="md"
        fullWidth
      >
        <DialogTitle>Add New Vulnerability</DialogTitle>
        <DialogContent dividers>
          <Grid container spacing={2}>
            <Grid item xs={12} md={6}>
              <TextField
                fullWidth
                label="Name"
                value={newVulnerability.name}
                onChange={(e) =>
                  handleAddVulnerabilityChange("name", e.target.value)
                }
                margin="normal"
                required
              />
            </Grid>
            <Grid item xs={12} md={6}>
              <TextField
                fullWidth
                label="CVE ID"
                value={newVulnerability.cveId}
                onChange={(e) =>
                  handleAddVulnerabilityChange("cveId", e.target.value)
                }
                margin="normal"
                placeholder="CVE-YYYY-NNNNN"
              />
            </Grid>
            <Grid item xs={12} md={6}>
              <FormControl fullWidth margin="normal">
                <InputLabel>Severity</InputLabel>
                <Select
                  value={newVulnerability.severity}
                  onChange={(e) =>
                    handleAddVulnerabilityChange("severity", e.target.value)
                  }
                  label="Severity"
                >
                  {Object.values(VulnerabilitySeverity).map((severity) => (
                    <MenuItem key={severity} value={severity}>
                      {severity}
                    </MenuItem>
                  ))}
                </Select>
              </FormControl>
            </Grid>
            <Grid item xs={12} md={6}>
              <FormControl fullWidth margin="normal">
                <InputLabel>Affected Asset</InputLabel>
                <Select
                  value={newVulnerability.assetId}
                  onChange={(e) =>
                    handleAddVulnerabilityChange("assetId", e.target.value)
                  }
                  label="Affected Asset"
                >
                  <MenuItem value="asset-1">Web Server (10.0.0.1)</MenuItem>
                  <MenuItem value="asset-2">
                    Database Server (10.0.0.2)
                  </MenuItem>
                  <MenuItem value="asset-3">
                    Application Server (10.0.0.3)
                  </MenuItem>
                  <MenuItem value="asset-4">File Server (10.0.0.4)</MenuItem>
                </Select>
              </FormControl>
            </Grid>
            <Grid item xs={12}>
              <TextField
                fullWidth
                label="Description"
                value={newVulnerability.description}
                onChange={(e) =>
                  handleAddVulnerabilityChange("description", e.target.value)
                }
                multiline
                rows={4}
                margin="normal"
                required
              />
            </Grid>
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button onClick={handleAddDialogClose}>Cancel</Button>
          <Button
            variant="contained"
            onClick={handleAddVulnerability}
            disabled={!newVulnerability.name || !newVulnerability.description}
          >
            Add Vulnerability
          </Button>
        </DialogActions>
      </Dialog>

      {/* Import Vulnerabilities Dialog */}
      <Dialog
        open={importDialogOpen}
        onClose={handleImportDialogClose}
        maxWidth="sm"
        fullWidth
      >
        <DialogTitle>Import Vulnerabilities</DialogTitle>
        <DialogContent dividers>
          <Grid container spacing={2}>
            <Grid item xs={12}>
              <FormControl fullWidth margin="normal">
                <InputLabel>Import Source</InputLabel>
                <Select
                  value={importSource}
                  onChange={(e) => setImportSource(e.target.value as string)}
                  label="Import Source"
                >
                  <MenuItem value="file">JSON/CSV File</MenuItem>
                  <MenuItem value="nessus">Nessus Scan</MenuItem>
                  <MenuItem value="qualys">Qualys Scan</MenuItem>
                  <MenuItem value="openvas">OpenVAS Scan</MenuItem>
                  <MenuItem value="nist">NIST NVD</MenuItem>
                </Select>
              </FormControl>
            </Grid>
            {importSource === "file" && (
              <Grid item xs={12}>
                <Button
                  component="label"
                  variant="outlined"
                  startIcon={<CloudUploadIcon />}
                  sx={{ mt: 1 }}
                  fullWidth
                >
                  Upload File
                  <input
                    type="file"
                    accept=".json,.csv,.xml"
                    hidden
                    onChange={handleImportFileChange}
                  />
                </Button>
                {importFile && (
                  <Typography variant="body2" sx={{ mt: 1 }}>
                    Selected File: {importFile.name}
                  </Typography>
                )}
              </Grid>
            )}
          </Grid>
        </DialogContent>
        <DialogActions>
          <Button onClick={handleImportDialogClose}>Cancel</Button>
          <Button
            variant="contained"
            onClick={handleImportVulnerabilities}
            disabled={!importSource || (importSource === "file" && !importFile)}
          >
            Import
          </Button>
        </DialogActions>
      </Dialog>
    </Box>
  );
};
